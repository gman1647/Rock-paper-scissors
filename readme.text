Rock Paper Scissors

This Rock, Paper, Scissors game produces a random selection by the computer after the player makes their choice by clicking on the image for the choice they which to make for each round. The game is played over five rounds with the winner being the one with the most round wins. A game can end in a tie, as can each round. If there is a tie during a round, neither player gets a point.

There were two parts to this project. The first portion focused on JavaScript and was displayed entirely in the console with player choice being handled by a prompt to enter text. The inputed text was then verified and formatted so that it could be used in a round. This was a good project to learn basic JavaScript functions as well as the effects of scope on variables. I ran into issues with the player and computer score in the loop. Initially, I declared the variables in the loop, which made them inaccessible for determining the winner. Once they were declared outside of the function, things began to work as intened. Part of my confusion was due to previous variables not working inside of the functions as intended and having to move them inside the function to work properly. Again, this was due to my limited understanding of scope when I began the project.

The second part of the project involved creating the player UI. This was to gain practice in manipulating the DOM and using eventListener queries. I used google a good bit to get it playing and looking as I envisioned it, and I'm quite happy with the result. 

Reworking the round function was not too difficult, but reworking the game elements took some time. I ended up completely rewriting the game functions. The initial changes that I made to my previous loop from the game played in the console ended up causing an infinite loop of rounds. I then created seperate functions for scoring and tracking the round taht would be called each time a player clicke on an icon. To end the game, I created a gameover function that was called based on the round number. If the round number was evaluated in the roundTracker as greater than 4, the scoring and game over functions are called. 

I ran into a bug where the player could keep clicking the buttons and the player and computer choice would keep displaying as if new rounds were being initiated, so I created a "gameState" variable that updates to 'Over' when the gameOver function is called. I then used the variable in an if statement in my addEventLister for each button that, if active, would not call the rest of the functions attached to the event listener.

I also decided to add a play again button to initiate a new game. I thought this would be a bit of challenge, but I just tied the click event to a page refresh and off you go to a new game with everything reset.

I would still like to add a hover function over each button for the player choice in the future, and clean up the display on smaller devices like cell phones, but overall, I'm very happy with how things turned out. This was a challenging but fun project in which I learned a lot, especially about variable scope, DOM manipulation, and fixing bugs and issues.